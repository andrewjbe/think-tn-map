---
title: "2024 Think<em>Tennessee</em> State of the Counties Dashboard"
subtitle: "Metric Summary: `r params$metric`"
format:
  andrew-report-template-html: default
# Formatting options -----------------------------------------------------------
logo: "www/thinktennessee-logo-white.png" # Other options are in the /www/ directory
number-sections: false
smooth-scroll: true
title-block-banner: "#1a884a" # The background color for the header banner
title-block-banner-color: "white" # The text color for the header banner
fontcolor: "black" # Default text color for the body
linkcolor: "#1a884a" # Default link color for the body
toc: false # This should be 'false' if your end goal is a PDF 
knitr: 
  opts_chunk: 
    fig.align: center # These are the default chunk options
    echo: false
    warning: false
    message: false
params:
  metric: "Flood Risk"
---

```{r}

# To render to PDF after you've rendered your .html document:
# pagedown::chrome_print("./inst/one-metric-all-counties/one-metric-all-counties.html",
#                        "./inst/one-metric-all-counties/one-metric-all-counties.pdf", format = "pdf")

library(tidyverse)
library(ggthemes)
library(sf)
library(gt)
library(janitor)
library(here)
options(scipen=999)

# Data -------------------------------------------------------------------------
main_ds <- read_csv("./data/data-clean.csv")

ds_info <- read_csv("./data/data-info.csv") |>
  clean_names()

ds_info_long <- ds_info |>
  filter(metric_title == params$metric)

```

```{r}
htmltools::tag("style", "h3 {margin-top: 0px;}")

ds_info_long |>
  select(category, description, years, source) |>
  pivot_longer(everything()) |>
  mutate(name = paste0(make_clean_names(name, "title"), ":")) |>
  gt(caption = md(paste0("### Metric Summary: ", params$metric))) |>
  cols_label(
    name = md(""),
    value = md(""),
  ) |>
  tab_style(
    style = list(
      cell_text(weight = "bold")
    ),
    locations = cells_body(
      columns = name,
      rows = TRUE
    )
  ) 
  
```

## `r params$metric` -- All Counties

```{r main_table}

format_metric <- function(x, format, diff = FALSE) {
  
  if (format == "percent") {
    y <- sprintf("%.1f%%", 100 * x)
  } else if (format == "number") {
    y <- format(round(x, 2), big.mark = ",")
  } else if (format == "dollar" & x < 0) {
    y <- paste0("-$", format(round(-x, 2), big.mark = ","))
  } else if (format == "dollar" & x >= 0) {
    y <- paste0("$", format(round(x, 0), big.mark = ","))
  } else if (format == "per_1") {
    y <- paste0(format(round(x, 2), big.mark = ","), " to 1")
  } else if (format == "per_1k") {
    y <- paste0(format(round(x, 2), big.mark = ","), " per 1k")
  } else if (format == "per_100k") {
    y <- paste0(format(round(x, 2), big.mark = ","), " per 100k")
  } else if (format == "ratio") {
    y <- paste0("1 to ", format(round(x, 2), big.mark = ","))
  } else {
    y <- "ERROR!"
  }
  
  if ((x > 0 | is.na(x)) & diff) {
    y <- paste0("+", y)
  }
  
  return(y)
  
}

combine_metric_rank <- function(metric, rank) {
  ifelse(
    is.na(rank), 
    as.character(metric), 
    paste0(metric, ";", rank)
  )
}


main_ds |>
  select(county, 
         value = ds_info_long$variable, 
         rank = paste0(ds_info_long$variable, "_rank")) |>
  cbind(ds_info_long) |>
  rowwise() |>
  mutate(
    value_clean = as.numeric(value),
    county_avg_diff = value_clean - average_tn_county_clean,
    value_fmt = format_metric(value_clean, format),
    rank_fmt = if_else(!is.na(rank), paste0("#", rank), ""),
    county_avg_diff_fmt = format_metric(county_avg_diff, format, diff = TRUE),
    county_avg_diff_color = case_when(
      county_avg_diff < 0 & good_outcomes == 1 ~ "red",
      county_avg_diff > 0 & good_outcomes == 1 ~ "green",
      county_avg_diff < 0 & good_outcomes == 0 ~ "green", 
      county_avg_diff > 0 & good_outcomes == 0 ~ "red"
    )
  ) |> 
  select(c(county, rank_fmt, value_fmt, 
           average_tn_county, county_avg_diff_color, county_avg_diff_fmt)) |>
  # GT =========================================================================
  gt() |>
  cols_hide(c(county_avg_diff_color)) |>
  # Font size, etc.
  tab_options(
    # table.align = "left",
    table.font.size = "100%"
  ) |>
  # Green / red values in county diff ------------------------------------------
  data_color(
    columns = county_avg_diff_color,
    target_columns = county_avg_diff_fmt,
    palette = c("#1a884a", "#C30211"),
    alpha = 1,
    apply_to = "text"
  ) |>
  # Labels ---------------------------------------------------------------------
  cols_label(
    county = md("**County**"),
    value_fmt = md("**County Value**"),
    rank_fmt = md("**County Rank**"),
    average_tn_county = md("**Value in Average TN County**"),
    county_avg_diff_fmt = md("**Difference from Average**")
  ) |>
  # Bold metric names  ---------------------------------------------------------
  tab_style(
    style = list(
      cell_text(weight = "bold")
    ),
    locations = cells_body(
      columns = county,
      rows = TRUE
    )
  ) |>
  # Row groups  ----------------------------------------------------------------
  # tab_row_group(
  #   label = md("### **Child Wellbeing**"),
  #   rows = category == "Children"
  # ) |>
  # tab_row_group(
  #   label = md("### **Economy**"),
  #   rows = category == "Economy"
  # ) |>
  # Options  -------------------------------------------------------------------
  opt_vertical_padding(scale = 0.3) |>
  opt_stylize(style = 6,
              color = "green")

    
```
    